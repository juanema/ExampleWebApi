<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ExampleWebApi</name>
    </assembly>
    <members>
        <member name="T:ExampleWebApi.ActionFilters.ValidateModelAttribute">
            <summary>
            Validate the ModelState on action executing
            </summary>
        </member>
        <member name="M:ExampleWebApi.Controllers.UsersController.Get">
            <summary>
            Get all Users
            </summary>        
        </member>
        <member name="M:ExampleWebApi.Controllers.UsersController.Get(System.Int32)">
            <summary>
            Get a specific User
            </summary>    
            <param name="id">User Id</param>
        </member>
        <member name="M:ExampleWebApi.Controllers.UsersController.Post(System.Nullable{System.Int32},ExampleWebApi.Domain.Models.Validations.SaveUserValidation)">
            <summary>
            Create or update a User
            </summary>            
            <param name="id">User Id</param>
            <param name="value">Validated values</param>
        </member>
        <member name="M:ExampleWebApi.Controllers.UsersController.Put(System.Int32,ExampleWebApi.Domain.Models.Validations.SaveUserValidation)">
            <summary>
            Update a specific User
            </summary>    
            <param name="id">User Id</param>
            <param name="value">Validated values</param>
        </member>
        <member name="M:ExampleWebApi.Controllers.UsersController.Delete(System.Int32)">
            <summary>
            Delete a specific User
            </summary>    
            <param name="id">User Id</param>
        </member>
        <member name="T:ExampleWebApi.Domain.Models.IEntityWithTypedId`1">
            <summary>
            Interface contract for entities
            </summary>
            <typeparam name="TId">Id type</typeparam>
        </member>
        <member name="P:ExampleWebApi.Domain.Models.IEntityWithTypedId`1.Id">
            <summary>
            Unique identifier in the data layer
            </summary>
            <remarks>
            Write access is intended for domain assigned
            ids, do not use when the id is assignewd in 
            the data layer
            </remarks>
        </member>
        <member name="T:ExampleWebApi.Domain.Models.Entity`1">
            <summary>
            Base class for all entities
            </summary>
            <typeparam name="TId">
            Id may be of type string, int, custom type, etc.
            Setter is protected to allow unit tests to set this property via reflection and to allow 
            domain objects more flexibility in setting this for those objects with assigned Ids.
            </typeparam>
        </member>
        <member name="M:ExampleWebApi.Domain.Services.Communication.SaveUserResponse.#ctor(ExampleWebApi.Domain.Models.User)">
            <summary>
            Creates a success response.
            </summary>
            <param name="user">Saved user.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:ExampleWebApi.Domain.Services.Communication.SaveUserResponse.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Creates an error response.
            </summary>
            <param name="message">Error message.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:ExampleWebApi.Extensions.ObjectExtensions.ThrowExceptionIfNull(System.Object)">
            <summary>
            Throw ArgumentNullException with the object name if the object is null
            </summary>
            <param name="notNullable">an object</param>
        </member>
    </members>
</doc>
